var fs = require('fs');
var htmlparser = require("htmlparser");
var jspath = require("jspath");

exports.getJsonList = function(params) {
    var dirs = fs.readdirSync(params.textsFolder);

    if (dirs.length === 0) {
        console.log('Опасность! Каталог с текстами пуст');
        return [];
    }

    return dirs.map(function(dirName){
        var json = getRawJson(params, dirName);

        return {
            name: dirName,
            json: json,
            title: json && json[0].text
        }
    });
};

/*
* 1. Зайти в папку
* 2. Cконвертить html в json
* 3. Вернуть json
* */
var getRawJson = function(params, dirName) {
    var dirPath = params.textsFolder + '/' + dirName;
    var filePath = dirPath +'/' + dirName + '.sm.html';

    if (fs.existsSync(filePath)) {
        return createJsonFile(filePath);
    }

    console.log('Нет HTML-файла-сырца в директории' + dirPath);
    return false;
};

var createJsonFile = function (htmlFilePath) {
    var jsonFilePath = htmlFilePath.replace('.sm.html', '.json.js');

    // Прочитать html-файл
    var htmlString = fs.readFileSync(htmlFilePath, 'utf8');

    // Конвертнуть его в json
    var json = convertHtml2Json(htmlString);

    // Сохранить в json файл
    fs.writeFileSync(jsonFilePath, JSON.stringify(json, false, 4), encoding='utf8');

    return json;
};


var convertHtml2Json = function (htmlString) {
    var handler = new htmlparser.DefaultHandler(function (error){}, {
        verbose: false,
        ignoreWhitespace: true,
        enforceEmptyTags: false
    });

    var parser = new htmlparser
        .Parser(handler)
        .parseComplete(htmlString);

    var rawJson = jspath.apply('.[1].children[1].children', handler.dom);

    return makeRawJson(rawJson);
}

var makeRawJson = function (parasArr) {
    var rawJson = [];

    if (parasArr) {
        rawJson = parasArr.map(function(para) {
            return {
                tag : para.attribs.class,
                text: para.children[0].data
            };
        })
    }
    return rawJson;
}
